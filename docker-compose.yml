version: '3.8'

services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: packet-zookeeper
    ports:
      - "2181:2181"
#    networks:
#      - packet-network

  kafka:
    image: wurstmeister/kafka
    container_name: packet-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://packet-kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_LISTENER_NAME: OUTSIDE
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: packet-zookeeper:2181
      KAFKA_LOG_RETENTION_HOURS: '168'
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
#    networks:
#      - packet-network

#  node-app:
#    build:
#      context: .
#      dockerfile: Dockerfile
#    container_name: packet-capture-app
#    ports:
#      - "3000:3000"
#    depends_on:
#      - kafka
#    networks:
#      - packet-network
#    volumes:
#      - .:/app:cached  # 수정: 이 설정은 소스코드를 동기화하는데만 사용
#    working_dir: /app
#    command: [ "npm", "start" ]

#networks:
#  packet-network:
#    driver: bridge
